{"title":"Jane Street Market EDA üìà","markdown":{"yaml":{"title":"Jane Street Market EDA üìà"},"headingText":"Project Definition üèÜ","containsRefs":false,"markdown":"\n\n\n\n> Jane Street Market Prediction Kaggle Competition\n\n- toc: true \n- badges: true\n- comments: true\n- author: Jaekang Lee\n- categories: [python, EDA, Jane Street, Kaggle, Visualization, Big Data]\n\n\n\nThe project is based on Kaggle competition by Jane Street - [Jane Street Market Prediction](https://www.kaggle.com/c/jane-street-market-prediction) <br>\n\"Buy low, sell high\" sounds easy. In reality, we know trading is difficult to solve and even more so in today's fast financial markets. Developing strategy with machine learning model can help us maximize returns using market data from a major global stock exchange. Then the competition will take our predictiveness to model against future market returns and give feedback on the leaderboard. My goal is to explore financial area of data science and explore Kaggle community as much as possible. <br>\n\nIn general, if one is able to generate a highly predictive model which selects the right trades to execute, they would also be playing an important role in sending the market signals that push prices closer to ‚Äúfair‚Äù values. That is, a better model will mean the market will be more efficient going forward. However, developing good models will be challenging for many reasons, including a very low signal-to-noise ratio, potential redundancy, strong feature correlation, and difficulty of coming up with a proper mathematical formulation. <br> (src: https://www.kaggle.com/c/jane-street-market-prediction/overview/description)\n\n\n#### Dataset: 6GB of Real world financial markets.\n- anonymized set of features, feature_{0...129}, representing real stock market data. <br>\n- each row in the dataset represents a trading opportunity, for which you will be predicting an action value: 1 to make the trade and 0 to pass on it. <br>\n- each trade has an associated weight and resp, which together represents a return on the trade. <br>\n- date column is an integer which represents the day of the trade, while ts_id represents a time ordering. <br>\n- in addition to anonymized feature values, you are provided with metadata about the features in features.csv. <br> \n- more info: https://www.kaggle.com/c/jane-street-market-prediction/data\n\n#### Problem: Predict 'Action' columns \nWhere 1 to make the trade and 0 to pass on it. The goal is minimize choosing bad trades and maximizing good trades. <br>\n#### Proposing a solution\nEven the world's finest financial expert wouldn't be able to gain anything from this anonymized data. Hence we are forced to use machine learning or data science approach to solve this problem. <br>\nSince the goal is clear (maximize profit) we want to see which features seem important or strange through EDA and visualizations. We will also have to grasp understanding of the data so it is not just a big 6GB of numbers. This will help us decide what to do with missing values and do feature engineering to help the computer learn. <br>\nThen we are going to build classifier model to let the computer do the hard work of learning to make good predictions. Of course, these models will be terrible at first so we will have to supervise it closely with some hyperparameters and strict evaluations. <br>\nFinally, the Jane Street will evaluate our submission and tell us if it is any good : )\n#### Metrics\nThe competition is evaluated on a utility score. Each row in the test set represents a trading opportunity for which you will be predicting an action value. Each trade j has an associated weight and resp, which represents a return. Weight and resp are not defined on test data set.\n\nFor each date i, we define:\n\n$pi=‚àë_{j}(weight_{ij}‚àóresp_{ij}‚àóaction{i_j})$\n\n$t=\\dfrac{‚àëp_i}{‚àëp_{i}^2}\\sqrt{\\dfrac{250}{|i|}}$\n\nwhere |i| is the number of unique dates in the test set. The utility is then defined as:\n$u=min(max(t,0),6)‚àëpi.$\n\n## EDA and Visualization\n\n### Import Data üìö\n\nAs told, all the featues and even tags are anonymized. There's not much human interpretability just from describe tables. Except feature_0 is unique by being binary.\n\n### Cleaning Data üßπ\n\nA lot of the histogram of above features has extreme outliers. For the full enlarged version of the histograms, check out [here](https://www.kaggle.com/leetolo/jane-street-market-prediction-eda) It would be safe to fill the null values with medians. Other imputation method considered were mean and KNN-Imputation. Check out my other notebook where KNN-Imputation was used to train MLP.\n\n\nIf we just remove all nans, we would be removing more than 16.54% of the dataset.\n\nInteresting points so far:\n- feature_0 is binary.\n- A lot of features seems to be normally distributed.\n- A lot of missing values. \n\n### Plots & Visualization üìä\n\n#### resp, resp_1, resp_2, resp_3, resp_4\n\nWe can see that resp is closely related to resp_4 (blue and purple). Resp_1 and resp_2 also seem to be closely related but much much linear. Resp_3 seem to be in the middle, where the shape is closer to upper group but position is slightly closer to green and orange.\n\n#### Weights\n\nNote: **weight** and **resp** multiplied together represents a return on the trade.\n\nWe can see that most weights are around 0.2 and we can see two 'peaks' which is around 0.2 and 0.3. Note that maximum weight was 167.29 represented by 1.0 on x-axis. Thus 0.2 represents around 33.458 and 0.3 represents around 50.187.\n\nNote that the graph plots all the positive gains. (Our 1's for our action column). So we can see that there were 'bigger' gains in the beginning and as time approach 500, the gain becomes smaller. In conclusion, the earlier trades are much bigger but we don't know what it's going to be like in our competition test set. \n\nWe know that we probability want to invest more 'weight' if there are bigger 'resp'(return). We learn here that higher weights are only when resp is close to 0. In other words, it is dumb to trade if resp is away from 0 but it is safe to invest even a lot if it is near 0.\n\nIn the Kaggle community, there's been lots of discussion on how the trends changed significantly since day ~85. We can see much more trades happening before day 100. Rest of the days are still very active but not as noisy. We can suggest that there has been a change of trading model from Jane Street as discussed [here](https://www.kaggle.com/c/jane-street-market-prediction/discussion/201930) by [Carl](https://www.kaggle.com/carlmcbrideellis).\n\nLet us look at the most important feature, 'feature_0'\n\nInterestingly, when feature_0 is 1, plot shows negative slope while in contrast, when feature_0 is -1, plot shows positive slope. My guess is that feature_0 corresponds to Buy(1) and Sell(-1) or vice versa. So if we set action to 1 with feature_0 = 1 then we are selling and when we set action to 0 with feature_0 = -1, then we are buying. This makes sense since whether we are buying or selling we can still lose or gain profit.\n\n#### Features\n\nRemember that we have another file called features.csv. Which can help us understand 100+ features and maybe cluster into groups. Let's take a look. <br>\n\nLet us see what tag_0 groups tells us.\n\nCorrelation between features of tag_0. It looks like there certainly are correlation between elements of the group except a few.\n\nInteresting points:\n- feature_0 has no tags\n- feature 79 to 119 all has 4 tags\n- feature 7 to 36 have 3 and 4 tags periodically\n- Similar trend between 2 to 7, 37 to 40, 120 to 129\n- tag_n doesn't tell too much about the features\n\n### Reference üìñ\n- [Jane Street: EDA of day 0 and feature importance](https://www.kaggle.com/carlmcbrideellis/jane-street-eda-of-day-0-and-feature-importance)\n- [Jane_street_Extensive_EDA & PCA starter üìä‚ö°](https://www.kaggle.com/muhammadmelsherbini/jane-street-extensive-eda-pca-starter)\n- [EDA / A Quant's Prespective](https://www.kaggle.com/hamzashabbirbhatti/eda-a-quant-s-prespective#Weight)\n\n### Submission\n\nIn another [notebook](https://leejaeka.github.io/jaekangai/mlp/python/feature%20engineering/imputation/jane%20street/kaggle/visualization/big%20data/random%20forest/2021/01/25/jane-predict.html). \n### Implementation Planning\nThoughts going into predicting phase.\n1. Days before ~100 can be dropped as suspicion of model shift.\n2. Feature_0 seem very important to find slope of cummulative resp.\n3. Resp near 0 is prefered over other values.\n4. A lot of features are normally distributed.\n5. We have over 2 million datas, it would be safe to add lot more features(feature enginerring)\n6. There are a lot of missing values too. Can try mean, median or KNN imputation methods.\n7. Note that although this is kind of a time series data, we can only predict with features 0 to 129\n\n","srcMarkdownNoYaml":"\n\n\n\n> Jane Street Market Prediction Kaggle Competition\n\n- toc: true \n- badges: true\n- comments: true\n- author: Jaekang Lee\n- categories: [python, EDA, Jane Street, Kaggle, Visualization, Big Data]\n\n\n\n### Project Definition üèÜ\nThe project is based on Kaggle competition by Jane Street - [Jane Street Market Prediction](https://www.kaggle.com/c/jane-street-market-prediction) <br>\n\"Buy low, sell high\" sounds easy. In reality, we know trading is difficult to solve and even more so in today's fast financial markets. Developing strategy with machine learning model can help us maximize returns using market data from a major global stock exchange. Then the competition will take our predictiveness to model against future market returns and give feedback on the leaderboard. My goal is to explore financial area of data science and explore Kaggle community as much as possible. <br>\n\nIn general, if one is able to generate a highly predictive model which selects the right trades to execute, they would also be playing an important role in sending the market signals that push prices closer to ‚Äúfair‚Äù values. That is, a better model will mean the market will be more efficient going forward. However, developing good models will be challenging for many reasons, including a very low signal-to-noise ratio, potential redundancy, strong feature correlation, and difficulty of coming up with a proper mathematical formulation. <br> (src: https://www.kaggle.com/c/jane-street-market-prediction/overview/description)\n\n\n#### Dataset: 6GB of Real world financial markets.\n- anonymized set of features, feature_{0...129}, representing real stock market data. <br>\n- each row in the dataset represents a trading opportunity, for which you will be predicting an action value: 1 to make the trade and 0 to pass on it. <br>\n- each trade has an associated weight and resp, which together represents a return on the trade. <br>\n- date column is an integer which represents the day of the trade, while ts_id represents a time ordering. <br>\n- in addition to anonymized feature values, you are provided with metadata about the features in features.csv. <br> \n- more info: https://www.kaggle.com/c/jane-street-market-prediction/data\n\n#### Problem: Predict 'Action' columns \nWhere 1 to make the trade and 0 to pass on it. The goal is minimize choosing bad trades and maximizing good trades. <br>\n#### Proposing a solution\nEven the world's finest financial expert wouldn't be able to gain anything from this anonymized data. Hence we are forced to use machine learning or data science approach to solve this problem. <br>\nSince the goal is clear (maximize profit) we want to see which features seem important or strange through EDA and visualizations. We will also have to grasp understanding of the data so it is not just a big 6GB of numbers. This will help us decide what to do with missing values and do feature engineering to help the computer learn. <br>\nThen we are going to build classifier model to let the computer do the hard work of learning to make good predictions. Of course, these models will be terrible at first so we will have to supervise it closely with some hyperparameters and strict evaluations. <br>\nFinally, the Jane Street will evaluate our submission and tell us if it is any good : )\n#### Metrics\nThe competition is evaluated on a utility score. Each row in the test set represents a trading opportunity for which you will be predicting an action value. Each trade j has an associated weight and resp, which represents a return. Weight and resp are not defined on test data set.\n\nFor each date i, we define:\n\n$pi=‚àë_{j}(weight_{ij}‚àóresp_{ij}‚àóaction{i_j})$\n\n$t=\\dfrac{‚àëp_i}{‚àëp_{i}^2}\\sqrt{\\dfrac{250}{|i|}}$\n\nwhere |i| is the number of unique dates in the test set. The utility is then defined as:\n$u=min(max(t,0),6)‚àëpi.$\n\n## EDA and Visualization\n\n### Import Data üìö\n\nAs told, all the featues and even tags are anonymized. There's not much human interpretability just from describe tables. Except feature_0 is unique by being binary.\n\n### Cleaning Data üßπ\n\nA lot of the histogram of above features has extreme outliers. For the full enlarged version of the histograms, check out [here](https://www.kaggle.com/leetolo/jane-street-market-prediction-eda) It would be safe to fill the null values with medians. Other imputation method considered were mean and KNN-Imputation. Check out my other notebook where KNN-Imputation was used to train MLP.\n\n\nIf we just remove all nans, we would be removing more than 16.54% of the dataset.\n\nInteresting points so far:\n- feature_0 is binary.\n- A lot of features seems to be normally distributed.\n- A lot of missing values. \n\n### Plots & Visualization üìä\n\n#### resp, resp_1, resp_2, resp_3, resp_4\n\nWe can see that resp is closely related to resp_4 (blue and purple). Resp_1 and resp_2 also seem to be closely related but much much linear. Resp_3 seem to be in the middle, where the shape is closer to upper group but position is slightly closer to green and orange.\n\n#### Weights\n\nNote: **weight** and **resp** multiplied together represents a return on the trade.\n\nWe can see that most weights are around 0.2 and we can see two 'peaks' which is around 0.2 and 0.3. Note that maximum weight was 167.29 represented by 1.0 on x-axis. Thus 0.2 represents around 33.458 and 0.3 represents around 50.187.\n\nNote that the graph plots all the positive gains. (Our 1's for our action column). So we can see that there were 'bigger' gains in the beginning and as time approach 500, the gain becomes smaller. In conclusion, the earlier trades are much bigger but we don't know what it's going to be like in our competition test set. \n\nWe know that we probability want to invest more 'weight' if there are bigger 'resp'(return). We learn here that higher weights are only when resp is close to 0. In other words, it is dumb to trade if resp is away from 0 but it is safe to invest even a lot if it is near 0.\n\nIn the Kaggle community, there's been lots of discussion on how the trends changed significantly since day ~85. We can see much more trades happening before day 100. Rest of the days are still very active but not as noisy. We can suggest that there has been a change of trading model from Jane Street as discussed [here](https://www.kaggle.com/c/jane-street-market-prediction/discussion/201930) by [Carl](https://www.kaggle.com/carlmcbrideellis).\n\nLet us look at the most important feature, 'feature_0'\n\nInterestingly, when feature_0 is 1, plot shows negative slope while in contrast, when feature_0 is -1, plot shows positive slope. My guess is that feature_0 corresponds to Buy(1) and Sell(-1) or vice versa. So if we set action to 1 with feature_0 = 1 then we are selling and when we set action to 0 with feature_0 = -1, then we are buying. This makes sense since whether we are buying or selling we can still lose or gain profit.\n\n#### Features\n\nRemember that we have another file called features.csv. Which can help us understand 100+ features and maybe cluster into groups. Let's take a look. <br>\n\nLet us see what tag_0 groups tells us.\n\nCorrelation between features of tag_0. It looks like there certainly are correlation between elements of the group except a few.\n\nInteresting points:\n- feature_0 has no tags\n- feature 79 to 119 all has 4 tags\n- feature 7 to 36 have 3 and 4 tags periodically\n- Similar trend between 2 to 7, 37 to 40, 120 to 129\n- tag_n doesn't tell too much about the features\n\n### Reference üìñ\n- [Jane Street: EDA of day 0 and feature importance](https://www.kaggle.com/carlmcbrideellis/jane-street-eda-of-day-0-and-feature-importance)\n- [Jane_street_Extensive_EDA & PCA starter üìä‚ö°](https://www.kaggle.com/muhammadmelsherbini/jane-street-extensive-eda-pca-starter)\n- [EDA / A Quant's Prespective](https://www.kaggle.com/hamzashabbirbhatti/eda-a-quant-s-prespective#Weight)\n\n### Submission\n\nIn another [notebook](https://leejaeka.github.io/jaekangai/mlp/python/feature%20engineering/imputation/jane%20street/kaggle/visualization/big%20data/random%20forest/2021/01/25/jane-predict.html). \n### Implementation Planning\nThoughts going into predicting phase.\n1. Days before ~100 can be dropped as suspicion of model shift.\n2. Feature_0 seem very important to find slope of cummulative resp.\n3. Resp near 0 is prefered over other values.\n4. A lot of features are normally distributed.\n5. We have over 2 million datas, it would be safe to add lot more features(feature enginerring)\n6. There are a lot of missing values too. Can try mean, median or KNN imputation methods.\n7. Note that although this is kind of a time series data, we can only predict with features 0 to 129\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"2021-01-23-JaneStreet-Copy1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.52","theme":"cosmo","title-block-banner":true,"title":"Jane Street Market EDA üìà"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}